name: Python Windows Setup

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Step 3: Create virtual environment
    - name: Create virtual environment
      run: |
        if (Test-Path venv) {
          Remove-Item -Recurse -Force venv
        }
        python -m venv venv
        .\venv\Scripts\activate

    # Step 4: Force reinstall pip to ensure it's the latest version
    - name: Force reinstall pip
      run: |
        .\venv\Scripts\activate
        python -m pip install --upgrade pip

    # Step 5: Install necessary packages (including pandas and openpyxl)
    - name: Install required packages
      run: |
        .\venv\Scripts\activate
        pip install pandas
        pip install openpyxl
        pip install pipdeptree

    # Step 6: Split requirements based on users
    - name: Split requirements based on users
      run: |
        .\venv\Scripts\activate
        python ./genpylocalreq.py

    # Step 7: Dynamic package download based on user directories
    - name: Download packages dynamically based on user directories
      run: |
        .\venv\Scripts\activate
        mkdir wheelhouse

        # Loop through each user directory and download the required packages
        foreach ($userDir in Get-ChildItem -Directory) {
          $requirementsFile = "$userDir/requirements_py.txt"
          if (Test-Path $requirementsFile) {
            echo "Processing $userDir's packages..."
            
            # Step 7a: Use pipdeptree to identify the full dependency tree for the packages
            echo "Generating dependency tree for $userDir..."
            pip install -r $requirementsFile
            pipdeptree --freeze > "$userDir/dependency_tree.txt"

            # Step 7b: Download packages and their dependencies using pip
            echo "Downloading packages for $userDir..."
            pip download -r $requirementsFile --dest=wheelhouse
            # Download the dependencies
            pip download -r "$userDir/dependency_tree.txt" --dest=wheelhouse
          }
        }

    # Step 8: Upload the downloaded packages as artifacts
    - name: Upload wheelhouse
      uses: actions/upload-artifact@v4
      with:
        name: python-packages
        path: wheelhouse/
